{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCAzC,SAASC,EAAgBhB,EAAGiB,GAKzC,OAJAD,EAAkBf,OAAOiB,eAAiBjB,OAAOiB,eAAeC,OAAS,SAAyBnB,EAAGiB,GAEnG,OADAjB,EAAEoB,UAAYH,EACPjB,CACT,EACOgB,EAAgBhB,EAAGiB,EAC5B,CCLe,SAASI,EAAeC,EAAUC,GAC/CD,EAASf,UAAYN,OAAOuB,OAAOD,EAAWhB,WAC9Ce,EAASf,UAAUkB,YAAcH,EACjCJ,EAAeI,EAAUC,EAC3B,CCLA,MAAM,EAA+BV,OAAOC,KAAKC,OAAO,gB,aCGnCW,EAAU,SAAAC,GAAA,SAAAD,IAAA,QAAAE,EAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAQS,OARTN,EAAAD,EAAAlB,KAAA0B,MAAAR,EAAA,OAAAS,OAAAJ,KAAA,MAC3BK,KAAOC,IAAAA,UAAwB,QAAOV,EACtCW,cAAgBD,IAAAA,UAAyB,iBAAgBV,EACzDY,OAASF,IAAAA,UAAyB,UAASV,EAC3Ca,WAAaH,IAAAA,UAAwB,cAAaV,EAClDc,SAAWJ,IAAAA,UAAwB,YAAWV,EAC9Ce,UAAYL,IAAAA,UAAgB,YAAaA,IAAAA,eAAoBV,EAE7DgB,MAAQN,IAAAA,OAAoB,SAAQV,CAAA,CAInC,OAZ0BP,EAAAK,EAAAC,GAQSD,EAAAnB,UAEpCsC,YAAA,WACI,MAAO,sBAAwBC,KAAKC,OAAS,IAAOD,KAAKE,KAAaC,GAAK,GAC/E,EAACvB,CAAA,CAZ0B,CAASY,KCHxC,MAAM,EAA+BzB,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,+B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCUlDmC,EAAoB,0CAELC,EAAW,SAAAC,GAAA,SAAAD,IAAA,QAAAvB,EAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAEgB,OAFhBN,EAAAwB,EAAA3C,KAAA0B,MAAAiB,EAAA,OAAAhB,OAAAJ,KAAA,MAC5BqB,SAAmB,EAAKzB,EACxB0B,WAAwC,KAAI1B,CAAA,CAFhBP,EAAA8B,EAAAC,GAEgB,IAAAG,EAAAJ,EAAA5C,UAsG3C,OAtG2CgD,EAE5CC,OAAA,SAAOC,GAAc,IAAAC,EAAA,KACjBN,EAAA7C,UAAMiD,OAAM/C,KAAC,KAAAgD,GAEbX,KAAKO,SAAU,EAEfP,KAAKQ,WAAa,KAElBK,IAAAA,MAAAA,KAA2B,oBAAqBC,EAAEC,MAAMC,MAAM,QAAS,CAAC,EAAG,CACvEC,aAAc,WACVL,EAAKJ,YAAa,EAClBM,EAAEI,QACN,IACDC,MAAK,SAAAX,GACJI,EAAKJ,WAAaA,EAClBM,EAAEI,QACN,GACJ,EAACT,EAEDW,KAAA,WAAO,IAAAC,EAAA,KACH,GAAwB,OAApBrB,KAAKQ,WACL,OAAOM,EAAE,uBAAwB,CAC7BA,EAAE,KAAMD,IAAAA,WAAAA,MAAqBT,EAAoB,kBACjDkB,IAAAA,cAIR,IAWIC,EAXEC,EAAOX,IAAAA,QAAAA,KACPf,EAAQE,KAAKQ,YAAcR,KAAKQ,WAAWV,QAGjD,IAAwB,IAApBE,KAAKQ,aAAyBV,EAC9B,OAAOgB,EAAE,uBAAwB,CAC7BA,EAAE,KAAMD,IAAAA,WAAAA,MAAqBT,EAAoB,kBACjDU,EAAE,IAAKD,IAAAA,WAAAA,MAAqBT,EAAoB,2BAKxD,IAAIqB,GAAW,EAef,OAbID,GACKA,EAAKE,UAAY,IAAIC,MAAK,SAAAC,GAAC,OAAIA,GAAKA,EAAEzB,OAASL,EAAMK,IAAI,IAC1DoB,EAAW,iBACJvB,KAAKQ,WAAWd,UACvB6B,EAAW,oBACXE,GAAW,GAEXF,EAAW,iBAGfA,EAAW,gBAGRT,EAAE,uBAAwB,CAC7BA,EAAE,KAAMD,IAAAA,WAAAA,MAAqBT,EAAoB,QAAS,CACtDN,MAAOA,EAAM+B,gBAEjBf,EAAE,yBAA0B,CACxBgB,IAAON,GACPV,EAAE,2BAA4B,KAC9BiB,IAAAA,UAAqB,CACjBjC,MAAAA,MAGRgB,EAAE,gCAAiCd,KAAKQ,WAAWf,gBAAkBoB,IAAAA,WAAAA,MAAqBT,EAAoB,QAAUmB,EAAU,CAC9HC,KAAAA,EACA1B,MAAOgB,EAAE,aAAchB,EAAM+B,cAC7B/E,EAAGgE,EAAE,IAAK,CACNkB,QAAO,SAACC,GACJA,EAAMC,iBACNrB,IAAAA,MAAAA,KAAesB,IACnB,MAEHtB,IAAAA,WAAAA,MAAqBT,EAAoB,8BAC9CU,EAAE,6BAA8BsB,IAAAA,UAAiB,CAC7CC,UAAW,uCACX9B,QAASP,KAAKO,QACdkB,SAAAA,EACAO,QAAS,WACLX,EAAKd,SAAU,EAEfM,IAAAA,QAAY,CACRyB,IAAKzB,IAAAA,MAAAA,UAAoB,UAAY,sBAAyBQ,EAAKb,WAA0BjB,OAAS,SACtGgD,OAAQ,SACTpB,MAAK,WACJE,EAAKd,SAAU,EAGfiC,aAAaC,QAAQ,yBAA0B,QAG/CC,OAAOC,SAAW9B,IAAAA,MAAAA,UAAoB,UAC1C,IAAE,OAAO,SAAA+B,GAGL,MAFAvB,EAAKd,SAAU,EACfO,EAAEI,SACI0B,CACV,GACJ,GACD/B,IAAAA,WAAAA,MAAqBT,EAAoB,YAEpD,EAACC,CAAA,CAxG2B,CAASwC,KCNzChC,IAAAA,aAAAA,IAAqB,oCAAoC,WACrDA,IAAAA,MAAAA,OAAAA,qBAAwCjC,EAExCiC,IAAAA,OAAAA,+BAA4C,CACxCiC,KAAM,kBACNC,UAAW1C,IAGf2C,EAAAA,EAAAA,QAAOC,IAAAA,UAA4B,SAAS,WACpCT,aAAaU,QAAQ,4BACrBV,aAAaW,WAAW,0BAExBtC,IAAAA,OAAAA,KAAgB,CACZuC,KAAM,WACPvC,IAAAA,WAAAA,MAAqB,yDAEhC,GACJ,G","sources":["webpack://@clarkwinkelmann/group-invitation/webpack/bootstrap","webpack://@clarkwinkelmann/group-invitation/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/group-invitation/webpack/runtime/define property getters","webpack://@clarkwinkelmann/group-invitation/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/group-invitation/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['forum/ForumApplication']\"","webpack://@clarkwinkelmann/group-invitation/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/group-invitation/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/group-invitation/./src/common/Invitation.ts","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['common/components/Page']\"","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['common/components/GroupBadge']\"","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['forum/components/LogInModal']\"","webpack://@clarkwinkelmann/group-invitation/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@clarkwinkelmann/group-invitation/./src/forum/components/GetRolePage.ts","webpack://@clarkwinkelmann/group-invitation/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/ForumApplication'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport Group from 'flarum/common/models/Group';\n\nexport default class Invitation extends Model {\n    code = Model.attribute<string>('code');\n    hasUsagesLeft = Model.attribute<boolean>('hasUsagesLeft');\n    canUse = Model.attribute<boolean>('canUse');\n    usageCount = Model.attribute<number>('usageCount');\n    maxUsage = Model.attribute<number>('maxUsage');\n    createdAt = Model.attribute('createdAt', Model.transformDate);\n\n    group = Model.hasOne<Group>('group');\n\n    apiEndpoint() {\n        return '/group-invitations' + (this.exists ? '/' + (this.data as any).id : '');\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/GroupBadge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/LogInModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport Page from 'flarum/common/components/Page';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport GroupBadge from 'flarum/common/components/GroupBadge';\nimport LogInModal from 'flarum/forum/components/LogInModal';\nimport avatar from 'flarum/common/helpers/avatar';\nimport Invitation from '../../common/Invitation';\n\nconst translationPrefix = 'clarkwinkelmann-group-invitation.forum.';\n\nexport default class GetRolePage extends Page {\n    loading: boolean = false;\n    invitation: Invitation | null | false = null;\n\n    oninit(vnode: Vnode) {\n        super.oninit(vnode);\n\n        this.loading = false;\n\n        this.invitation = null;\n\n        app.store.find<Invitation>('group-invitations', m.route.param('code'), {}, {\n            errorHandler: () => {\n                this.invitation = false; // Not found\n                m.redraw();\n            },\n        }).then(invitation => {\n            this.invitation = invitation;\n            m.redraw();\n        });\n    }\n\n    view() {\n        if (this.invitation === null) {\n            return m('.GroupInvitationPage', [\n                m('h2', app.translator.trans(translationPrefix + 'generic-title')),\n                LoadingIndicator.component(),\n            ]);\n        }\n\n        const user = app.session.user;\n        const group = this.invitation && this.invitation.group();\n\n        // There should always be a group relationship, but this is the easiest fail safe\n        if (this.invitation === false || !group) {\n            return m('.GroupInvitationPage', [\n                m('h2', app.translator.trans(translationPrefix + 'generic-title')),\n                m('p', app.translator.trans(translationPrefix + 'invitation.not-found')),\n            ]);\n        }\n\n        let userText;\n        let disabled = true;\n\n        if (user) {\n            if ((user.groups() || []).some(g => g && g.id() === group.id())) {\n                userText = 'already-member';\n            } else if (this.invitation.canUse()) {\n                userText = 'already-connected';\n                disabled = false;\n            } else {\n                userText = 'not-authorized';\n            }\n        } else {\n            userText = 'not-connected';\n        }\n\n        return m('.GroupInvitationPage', [\n            m('h2', app.translator.trans(translationPrefix + 'title', {\n                group: group.namePlural(),\n            })),\n            m('.GroupInvitationSchema', [\n                avatar(user as any), // Must cast to any because Flarum doesn't type-hint missing users\n                m('span.GroupInvitationPlus', '+'),\n                GroupBadge.component({\n                    group,\n                }),\n            ]),\n            m('p.GroupInvitationConfirmation', this.invitation.hasUsagesLeft() ? app.translator.trans(translationPrefix + 'user.' + userText, {\n                user,\n                group: m('span.group', group.namePlural()),\n                a: m('a', {\n                    onclick(event: Event) {\n                        event.preventDefault();\n                        app.modal.show(LogInModal);\n                    },\n                })\n            }) : app.translator.trans(translationPrefix + 'invitation.no-usages-left')),\n            m('.Form-group.Form--centered', Button.component({\n                className: 'Button Button--primary Button--block',\n                loading: this.loading,\n                disabled,\n                onclick: () => {\n                    this.loading = true;\n\n                    app.request({\n                        url: app.forum.attribute('apiUrl') + '/group-invitations/' + (this.invitation as Invitation).code() + '/apply',\n                        method: 'POST',\n                    }).then(() => {\n                        this.loading = false;\n\n                        // Memorize success to show an alert after refresh\n                        localStorage.setItem('groupInvitationSuccess', 'true');\n\n                        // Force a refresh to get the new badges and permissions\n                        window.location = app.forum.attribute('baseUrl');\n                    }).catch(e => {\n                        this.loading = false;\n                        m.redraw();\n                        throw e;\n                    });\n                },\n            }, app.translator.trans(translationPrefix + 'apply'))),\n        ]);\n    }\n}\n","import app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport ForumApplication from 'flarum/forum/ForumApplication';\nimport Invitation from '../common/Invitation';\nimport GetRolePage from './components/GetRolePage';\n\napp.initializers.add('clarkwinkelmann-group-invitation', () => {\n    app.store.models['group-invitations'] = Invitation;\n\n    app.routes.clarkwinkelmannGroupInvitation = {\n        path: '/get-role/:code',\n        component: GetRolePage,\n    };\n\n    extend(ForumApplication.prototype, 'mount', () => {\n        if (localStorage.getItem('groupInvitationSuccess')) {\n            localStorage.removeItem('groupInvitationSuccess');\n\n            app.alerts.show({\n                type: 'success',\n            }, app.translator.trans('clarkwinkelmann-group-invitation.forum.success-alert'));\n        }\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","Invitation","_Model","_this","_len","arguments","length","args","Array","_key","apply","concat","code","Model","hasUsagesLeft","canUse","usageCount","maxUsage","createdAt","group","apiEndpoint","this","exists","data","id","translationPrefix","GetRolePage","_Page","loading","invitation","_proto","oninit","vnode","_this2","app","m","route","param","errorHandler","redraw","then","view","_this3","LoadingIndicator","userText","user","disabled","groups","some","g","namePlural","avatar","GroupBadge","onclick","event","preventDefault","LogInModal","Button","className","url","method","localStorage","setItem","window","location","e","Page","path","component","extend","ForumApplication","getItem","removeItem","type"],"sourceRoot":""}